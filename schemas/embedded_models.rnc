# The embedded models

embedded_models = 
   (
      ## Fluidity embedded models
      element embedded_models {
         ## Options controlling the stochastic module
         element stochastic_routines {
            ## Do not write the random number generator seeds to file when checkpointing.
            element do_not_checkpoint {
               empty
            }?,
            ## Seed used for processes not named below
            element seed { 
               attribute name {"Generic"},
               integer_vector
            }?,
            ## Seed used for processes not named below
            element seed {
               attribute name {xsd:string},
               integer_vector
            }?,
            comment
         },
         ## Global options for synthetic eddy method boundary condtions
         element synthetic_eddies {
            ## Initialise eddies from the named .vtp file. used for checkpointing.
            element read_from_file {xsd:string}
         }?,
         particle_model,
         comment
      }
   )

particle_model =
   (
      ## Options passed to the particle model itself
      element particle_model {
         ## Specify the surface ids of inlets (surfaces on which particles are introduced
         element inlet {
            attribute name {xsd:string},
            element surface_ids{
               integer_vector
            },
            element insertion_rate{
               real
            },
            element particle_velocity{
               (
                  element constant {
                     real_vector
                   }|
                   ## Python function prescribing real input. Functions should be of the form:
                   ##
                   ##  def val(X,t):
                   ##     # Function code
                   ##     return # Return value
                   ##
                   ## 
                   element python {
                     python_code
                   }
               )
            },
            element probability_density_function{
               (
                   element constant {
                     real
                   }|
                   ## Python function prescribing real input. Functions should be of the form:
                   ##
                   ##  def val(X,t):
                   ##     # Function code
                   ##     return # Return value
                   ##
                   ## 
                   element python {
                     python_code
                   }
               )
            }
         }*,
         ## Specify the surface ids of outlets (surfaces from which particles do not rebound)
         element outlet_ids {
            element surface_ids{
               integer_vector
            }
         }?,
         element particle_classes {
            element particle_class {
               attribute name { string },
               particle_class_base
            }+
         }
      }
   )


particle_class_base = 
   (
      ## Particle class descriptions
      element diameter { real },
      element density { real }?
      #         element distribution {
      #            empty
      #         }
   )